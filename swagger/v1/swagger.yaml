---
swagger: '2.0'
info:
  title: API V1
  version: v1
paths:
  "/api/v1/announcements":
    post:
      summary: Create a announcement
      tags:
      - Announcements
      consumes:
      - application/json
      security:
      - JWT: {}
      parameters:
      - name: Authorization
        in: header
        type: apiKey
      - name: params
        in: body
        schema:
          type: object
          properties:
            announcement:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: text
                announcement_type:
                  type: string
                image:
                  type: string
                category_id:
                  type: integer
              required:
              - name
              - description
              - category_id
          required:
          - announcement
      produces:
      - application/json
      responses:
        '201':
          description: Announcement created
        '422':
          description: Announcement creation failed for parameter missing
  "/api/v1/announcements/{id}":
    get:
      summary: Retrieves a announcement.
      tags:
      - Announcements
      description: a announcement
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: Announcement found
        '404':
          description: Announcement not found
    put:
      summary: Update a announcement
      tags:
      - Announcements
      consumes:
      - application/json
      security:
      - JWT: {}
      parameters:
      - name: Authorization
        in: header
        type: apiKey
      - name: id
        in: path
        type: string
        required: true
      - name: params
        in: body
        schema:
          type: object
          properties:
            announcement:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                announcement_type:
                  type: string
                category_id:
                  type: integer
              required:
              - name
              - description
              - category_id
          required:
          - announcement
      produces:
      - application/json
      responses:
        '200':
          description: Announcement Updated
        '422':
          description: Announcement creation failed for parameter missing
  "/api/v1/members":
    post:
      summary: Creates members
      tags:
      - Members
      consumes:
      - application/json
      security:
      - JWT: {}
      parameters:
      - name: Authorization
        in: header
        type: apiKey
      - name: params
        in: body
        schema:
          type: object
          properties:
            member:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: text
                facebook_url:
                  type: string
                linkedin_url:
                  type: string
                instagram_url:
                  type: string
                image:
                  type: string
              required:
              - name
              - description
          required:
          - member
      produces:
      - application/json
      responses:
        '201':
          description: Member created
        '422':
          description: Member creation failed for parameter missing
    get:
      summary: Indexes members
      tags:
      - Members
      produces:
      - application/json
      responses:
        '200':
          description: Members found
          schema:
            type: object
            properties:
              member:
                type: array
                items:
                  "$ref": "#/definitions/Member"
  "/api/v1/slides":
    get:
      summary: Fetch slides
      tags:
      - Slides
      produces:
      - application/json
      security:
      - JWT: {}
      parameters:
      - name: Authorization
        in: header
        type: apiKey
      responses:
        '200':
          description: Slides found
          schema:
            type: object
            properties:
              slide:
                type: array
                items:
                  "$ref": "#/definitions/Slide"
  "/api/v1/testimonials":
    post:
      summary: Create a testimonial
      tags:
      - Testimonial
      consumes:
      - application/json
      security:
      - JWT: {}
      parameters:
      - name: Authorization
        in: header
        type: apiKey
      - name: params
        in: body
        schema:
          type: object
          properties:
            testimonial:
              type: object
              properties:
                name:
                  type: string
                content:
                  type: string
              required:
              - name
              - content
          required:
          - testimonial
      produces:
      - application/json
      responses:
        '201':
          description: Testimonial created
        '422':
          description: Testimonial creation failed for parameter missing
    get:
      summary: Fetch testimonials
      tags:
      - Testimonial
      produces:
      - application/json
      responses:
        '200':
          description: Testimonial found
          schema:
            type: object
            properties:
              Testimonial:
                type: object
                items:
                  "$ref": "#/definitions/Testimonial"
  "/api/v1/testimonials?page={page}":
    get:
      summary: Fetch testimonials
      tags:
      - Testimonial
      produces:
      - application/json
      parameters:
      - name: page
        in: path
        type: string
        required: true
      responses:
        '200':
          description: Testimonial found
          schema:
            type: object
            properties:
              Testimonial:
                type: object
                items:
                  "$ref": "#/definitions/Testimonial"
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
definitions:
  Slide:
    type: object
    properties:
      id:
        type: integer
        example: '1'
      order:
        type: integer
        example: '1'
      image:
        type: string
        example: "/img/file.jpg"
  Announcement:
    type: object
    properties:
      id:
        type: integer
        example: '1'
      name:
        type: string
        example: name
      description:
        type: string
        example: description
      announcement_type:
        type: string
        example: announcement_type
      category_id:
        type: integer
        example: '1'
  Testimonial:
    type: object
    properties:
      id:
        type: integer
        example: '1'
      name:
        type: string
        example: name
      description:
        type: string
        example: description
      announcement_type:
        type: string
        example: announcement_type
      category_id:
        type: integer
        example: '1'
  Member:
    type: object
    properties:
      id:
        type: integer
        example: '100'
      name:
        type: string
        example: test
      description:
        type: string
        example: test
      image:
        type: string
        example: "/img/file.jpg"
      content:
        type: string
        example: description
  securityDefinitions:
    JWT:
      description: Json Web Token
      name: Authorization
      in: header
      type: apiKey
    properties:
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjowLCJleHAiOjE2NDgxNTYzMTV9.xz_nSb2bBUpsqx4QDQPArCzND7XRQMi7dJzjoGg0yY0
